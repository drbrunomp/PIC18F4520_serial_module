

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 23 14:48:38 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 05/01/2024 GMT
    26                           ; 
    27                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _RCREG	set	4014
    60   000000                     _TXREG	set	4013
    61   000000                     _SPBRG	set	4015
    62   000000                     _BAUDCTLbits	set	4024
    63   000000                     _PIR1bits	set	3998
    64   000000                     _TRMT	set	32097
    65   000000                     _OSCTUNE	set	3995
    66   000000                     _RCSTAbits	set	4011
    67   000000                     _TXSTAbits	set	4012
    68   000000                     _RCIF	set	31989
    69   000000                     _ADCON1	set	4033
    70   000000                     _OSCCON	set	4051
    71   000000                     _INTCON	set	4082
    72   000000                     _PIE1	set	3997
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77   000678                     __pcinit:
    78                           	callstack 0
    79   000678                     start_initialization:
    80                           	callstack 0
    81   000678                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Clear objects allocated to COMRAM (64 bytes)
    85   000678  EE00  F001         	lfsr	0,__pbssCOMRAM
    86   00067C  0E40               	movlw	64
    87   00067E                     clear_0:
    88   00067E  6AEE               	clrf	postinc0,c
    89   000680  06E8               	decf	wreg,f,c
    90   000682  E1FD               	bnz	clear_0
    91   000684                     end_of_initialization:
    92                           	callstack 0
    93   000684                     __end_of__initialization:
    94                           	callstack 0
    95   000684  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96   000686  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97   000688  0100               	movlb	0
    98   00068A  EF30  F003         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssCOMRAM
   101   000001                     __pbssCOMRAM:
   102                           	callstack 0
   103   000001                     _data:
   104                           	callstack 0
   105   000001                     	ds	64
   106                           
   107                           	psect	cstackCOMRAM
   108   000041                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000041                     eusart_write@c:
   111                           	callstack 0
   112                           
   113                           ; 1 bytes @ 0x0
   114   000041                     	ds	1
   115   000042                     eusart_string@str:
   116                           	callstack 0
   117                           
   118                           ; 1 bytes @ 0x1
   119   000042                     	ds	1
   120   000043                     ??_half_Duplex:
   121                           
   122                           ; 1 bytes @ 0x2
   123   000043                     	ds	2
   124   000045                     
   125                           ; 1 bytes @ 0x4
   126 ;;
   127 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   128 ;;
   129 ;; *************** function _main *****************
   130 ;; Defined at:
   131 ;;		line 95 in file "Program_main.c"
   132 ;; Parameters:    Size  Location     Type
   133 ;;		None
   134 ;; Auto vars:     Size  Location     Type
   135 ;;		None
   136 ;; Return value:  Size  Location     Type
   137 ;;                  1    wreg      void 
   138 ;; Registers used:
   139 ;;		wreg, status,2, cstack
   140 ;; Tracked objects:
   141 ;;		On entry : 0/0
   142 ;;		On exit  : 0/0
   143 ;;		Unchanged: 0/0
   144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   145 ;;      Params:         0       0       0       0       0       0       0
   146 ;;      Locals:         0       0       0       0       0       0       0
   147 ;;      Temps:          0       0       0       0       0       0       0
   148 ;;      Totals:         0       0       0       0       0       0       0
   149 ;;Total ram usage:        0 bytes
   150 ;; Hardware stack levels required when called: 4
   151 ;; This function calls:
   152 ;;		_config_FOSC
   153 ;;		_config_IO
   154 ;;		_config_Interrupt
   155 ;;		_eusart_init
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162   000660                     __ptext0:
   163                           	callstack 0
   164   000660                     _main:
   165                           	callstack 27
   166   000660                     
   167                           ;Program_main.c: 97:     config_FOSC();
   168   000660  EC69  F003         	call	_config_FOSC	;wreg free
   169                           
   170                           ;Program_main.c: 98:     config_IO();
   171   000664  EC6E  F003         	call	_config_IO	;wreg free
   172                           
   173                           ;Program_main.c: 99:     config_Interrupt();
   174   000668  EC64  F003         	call	_config_Interrupt	;wreg free
   175                           
   176                           ;Program_main.c: 100:     eusart_init();
   177   00066C  EC52  F003         	call	_eusart_init	;wreg free
   178   000670                     l77:
   179   000670  EF38  F003         	goto	l77
   180   000674  EF07  F000         	goto	start
   181   000678                     __end_of_main:
   182                           	callstack 0
   183                           
   184 ;; *************** function _eusart_init *****************
   185 ;; Defined at:
   186 ;;		line 4 in file "eusart.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   200 ;;      Params:         0       0       0       0       0       0       0
   201 ;;      Locals:         0       0       0       0       0       0       0
   202 ;;      Temps:          0       0       0       0       0       0       0
   203 ;;      Totals:         0       0       0       0       0       0       0
   204 ;;Total ram usage:        0 bytes
   205 ;; Hardware stack levels used: 1
   206 ;; Hardware stack levels required when called: 3
   207 ;; This function calls:
   208 ;;		Nothing
   209 ;; This function is called by:
   210 ;;		_main
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text1
   215   0006A4                     __ptext1:
   216                           	callstack 0
   217   0006A4                     _eusart_init:
   218                           	callstack 27
   219   0006A4                     
   220                           ;eusart.c: 6:     TXSTAbits.TXEN = 1;
   221   0006A4  8AAC               	bsf	172,5,c	;volatile
   222                           
   223                           ;eusart.c: 7:     RCSTAbits.CREN = 1;
   224   0006A6  88AB               	bsf	171,4,c	;volatile
   225                           
   226                           ;eusart.c: 8:     TXSTAbits.SYNC = 0;
   227   0006A8  98AC               	bcf	172,4,c	;volatile
   228                           
   229                           ;eusart.c: 9:     RCSTAbits.SPEN = 1;
   230   0006AA  8EAB               	bsf	171,7,c	;volatile
   231                           
   232                           ;eusart.c: 10:     TXSTAbits.BRGH = 0;
   233   0006AC  94AC               	bcf	172,2,c	;volatile
   234                           
   235                           ;eusart.c: 11:     BAUDCTLbits.BRG16 = 0;
   236   0006AE  96B8               	bcf	184,3,c	;volatile
   237   0006B0                     
   238                           ;eusart.c: 12:     SPBRG = 12;
   239   0006B0  0E0C               	movlw	12
   240   0006B2  6EAF               	movwf	175,c	;volatile
   241   0006B4  0012               	return		;funcret
   242   0006B6                     __end_of_eusart_init:
   243                           	callstack 0
   244                           
   245 ;; *************** function _config_Interrupt *****************
   246 ;; Defined at:
   247 ;;		line 79 in file "Program_main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   261 ;;      Params:         0       0       0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0       0       0
   263 ;;      Temps:          0       0       0       0       0       0       0
   264 ;;      Totals:         0       0       0       0       0       0       0
   265 ;;Total ram usage:        0 bytes
   266 ;; Hardware stack levels used: 1
   267 ;; Hardware stack levels required when called: 3
   268 ;; This function calls:
   269 ;;		Nothing
   270 ;; This function is called by:
   271 ;;		_main
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text2
   276   0006C8                     __ptext2:
   277                           	callstack 0
   278   0006C8                     _config_Interrupt:
   279                           	callstack 27
   280   0006C8                     
   281                           ;Program_main.c: 81:     INTCON = 0XC0;
   282   0006C8  0EC0               	movlw	192
   283   0006CA  6EF2               	movwf	242,c	;volatile
   284                           
   285                           ;Program_main.c: 82:     PIE1 = 0X20;
   286   0006CC  0E20               	movlw	32
   287   0006CE  6E9D               	movwf	157,c	;volatile
   288   0006D0  0012               	return		;funcret
   289   0006D2                     __end_of_config_Interrupt:
   290                           	callstack 0
   291                           
   292 ;; *************** function _config_IO *****************
   293 ;; Defined at:
   294 ;;		line 74 in file "Program_main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   308 ;;      Params:         0       0       0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels used: 1
   314 ;; Hardware stack levels required when called: 3
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		_main
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text3
   323   0006DC                     __ptext3:
   324                           	callstack 0
   325   0006DC                     _config_IO:
   326                           	callstack 27
   327   0006DC                     
   328                           ;Program_main.c: 76:     ADCON1 = 0X0F;
   329   0006DC  0E0F               	movlw	15
   330   0006DE  6EC1               	movwf	193,c	;volatile
   331   0006E0  0012               	return		;funcret
   332   0006E2                     __end_of_config_IO:
   333                           	callstack 0
   334                           
   335 ;; *************** function _config_FOSC *****************
   336 ;; Defined at:
   337 ;;		line 69 in file "Program_main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   351 ;;      Params:         0       0       0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels used: 1
   357 ;; Hardware stack levels required when called: 3
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text4
   366   0006D2                     __ptext4:
   367                           	callstack 0
   368   0006D2                     _config_FOSC:
   369                           	callstack 27
   370   0006D2                     
   371                           ;Program_main.c: 71:     OSCCON = 0X00;
   372   0006D2  0E00               	movlw	0
   373   0006D4  6ED3               	movwf	211,c	;volatile
   374                           
   375                           ;Program_main.c: 72:     OSCTUNE = 0X00;
   376   0006D6  0E00               	movlw	0
   377   0006D8  6E9B               	movwf	155,c	;volatile
   378   0006DA  0012               	return		;funcret
   379   0006DC                     __end_of_config_FOSC:
   380                           	callstack 0
   381                           
   382 ;; *************** function _half_Duplex *****************
   383 ;; Defined at:
   384 ;;		line 85 in file "Program_main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   398 ;;      Params:         0       0       0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0
   400 ;;      Temps:          2       0       0       0       0       0       0
   401 ;;      Totals:         2       0       0       0       0       0       0
   402 ;;Total ram usage:        2 bytes
   403 ;; Hardware stack levels used: 1
   404 ;; Hardware stack levels required when called: 2
   405 ;; This function calls:
   406 ;;		_eusart_read
   407 ;;		_eusart_string
   408 ;; This function is called by:
   409 ;;		Interrupt level 2
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	intcode
   414   000008                     __pintcode:
   415                           	callstack 0
   416   000008                     _half_Duplex:
   417                           	callstack 27
   418                           
   419                           ;incstack = 0
   420   000008  8245               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   421   00000A  ED01  F003         	call	int_func,f	;refresh shadow registers
   422                           
   423                           	psect	intcode_body
   424   000602                     __pintcode_body:
   425                           	callstack 27
   426   000602                     int_func:
   427                           	callstack 27
   428   000602  0006               	pop		; remove dummy address from shadow register refresh
   429   000604  CFD9 F043          	movff	fsr2l,??_half_Duplex
   430   000608  CFDA F044          	movff	fsr2h,??_half_Duplex+1
   431   00060C                     
   432                           ;Program_main.c: 87:     if(PIR1bits.RCIF == 1)
   433   00060C  AA9E               	btfss	158,5,c	;volatile
   434   00060E  EF0B  F003         	goto	i2u6_41
   435   000612  EF0D  F003         	goto	i2u6_40
   436   000616                     i2u6_41:
   437   000616  EF14  F003         	goto	i2l808
   438   00061A                     i2u6_40:
   439   00061A                     
   440                           ;Program_main.c: 88:     {;Program_main.c: 89:       data[0] = eusart_read();
   441   00061A  EC5B  F003         	call	_eusart_read	;wreg free
   442   00061E  6E01               	movwf	_data^0,c
   443   000620                     
   444                           ;Program_main.c: 90:       eusart_string(data);
   445   000620  0E01               	movlw	low _data
   446   000622  6E42               	movwf	eusart_string@str^0,c
   447   000624  EC1B  F003         	call	_eusart_string	;wreg free
   448   000628                     i2l808:
   449                           
   450                           ;Program_main.c: 92:     PIR1bits.RCIF = 0;
   451   000628  9A9E               	bcf	158,5,c	;volatile
   452   00062A  C044  FFDA         	movff	??_half_Duplex+1,fsr2h
   453   00062E  C043  FFD9         	movff	??_half_Duplex,fsr2l
   454   000632  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   455   000634  0011               	retfie		f
   456   000636                     __end_of_half_Duplex:
   457                           	callstack 0
   458                           
   459 ;; *************** function _eusart_string *****************
   460 ;; Defined at:
   461 ;;		line 23 in file "eusart.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  str             1    1[COMRAM] PTR unsigned char 
   464 ;;		 -> data(64), 
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   476 ;;      Params:         1       0       0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0       0       0
   479 ;;      Totals:         1       0       0       0       0       0       0
   480 ;;Total ram usage:        1 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; Hardware stack levels required when called: 1
   483 ;; This function calls:
   484 ;;		_eusart_write
   485 ;; This function is called by:
   486 ;;		_half_Duplex
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text6
   491   000636                     __ptext6:
   492                           	callstack 0
   493   000636                     _eusart_string:
   494                           	callstack 27
   495   000636                     
   496                           ;eusart.c: 23: void eusart_string(char *str);eusart.c: 24: {;eusart.c: 25:     while(*st
      +                          r!='\0')
   497   000636  EF24  F003         	goto	i2l800
   498   00063A                     i2l796:
   499                           
   500                           ;eusart.c: 26:     {;eusart.c: 27:         eusart_write(*str);
   501   00063A  5042               	movf	eusart_string@str^0,w,c
   502   00063C  6ED9               	movwf	fsr2l,c
   503   00063E  6ADA               	clrf	fsr2h,c
   504   000640  50DF               	movf	indf2,w,c
   505   000642  EC47  F003         	call	_eusart_write
   506   000646                     
   507                           ;eusart.c: 28:         str++;
   508   000646  2A42               	incf	eusart_string@str^0,f,c
   509   000648                     i2l800:
   510                           
   511                           ;eusart.c: 25:     while(*str!='\0')
   512   000648  5042               	movf	eusart_string@str^0,w,c
   513   00064A  6ED9               	movwf	fsr2l,c
   514   00064C  6ADA               	clrf	fsr2h,c
   515   00064E  50DF               	movf	indf2,w,c
   516   000650  A4D8               	btfss	status,2,c
   517   000652  EF2D  F003         	goto	i2u5_41
   518   000656  EF2F  F003         	goto	i2u5_40
   519   00065A                     i2u5_41:
   520   00065A  EF1D  F003         	goto	i2l796
   521   00065E                     i2u5_40:
   522   00065E  0012               	return		;funcret
   523   000660                     __end_of_eusart_string:
   524                           	callstack 0
   525                           
   526 ;; *************** function _eusart_write *****************
   527 ;; Defined at:
   528 ;;		line 16 in file "eusart.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;  c               1    wreg     unsigned char 
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  c               1    0[COMRAM] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   542 ;;      Params:         0       0       0       0       0       0       0
   543 ;;      Locals:         1       0       0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0
   545 ;;      Totals:         1       0       0       0       0       0       0
   546 ;;Total ram usage:        1 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_eusart_string
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text7
   556   00068E                     __ptext7:
   557                           	callstack 0
   558   00068E                     _eusart_write:
   559                           	callstack 27
   560                           
   561                           ;incstack = 0
   562                           ;eusart_write@c stored from wreg
   563   00068E  6E41               	movwf	eusart_write@c^0,c
   564   000690                     i2l22:
   565   000690  A2AC               	btfss	4012,1,c	;volatile
   566   000692  EF4D  F003         	goto	i2u1_41
   567   000696  EF4F  F003         	goto	i2u1_40
   568   00069A                     i2u1_41:
   569   00069A  EF48  F003         	goto	i2l22
   570   00069E                     i2u1_40:
   571   00069E                     
   572                           ;eusart.c: 19:     TXREG = c;
   573   00069E  C041  FFAD         	movff	eusart_write@c,4013	;volatile
   574   0006A2  0012               	return		;funcret
   575   0006A4                     __end_of_eusart_write:
   576                           	callstack 0
   577                           
   578 ;; *************** function _eusart_read *****************
   579 ;; Defined at:
   580 ;;		line 33 in file "eusart.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      unsigned char 
   587 ;; Registers used:
   588 ;;		wreg, status,2
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   594 ;;      Params:         0       0       0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_half_Duplex
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text8
   608   0006B6                     __ptext8:
   609                           	callstack 0
   610   0006B6                     _eusart_read:
   611                           	callstack 28
   612   0006B6                     i2l34:
   613   0006B6  AA9E               	btfss	3998,5,c	;volatile
   614   0006B8  EF60  F003         	goto	i2u3_41
   615   0006BC  EF62  F003         	goto	i2u3_40
   616   0006C0                     i2u3_41:
   617   0006C0  EF5B  F003         	goto	i2l34
   618   0006C4                     i2u3_40:
   619   0006C4                     
   620                           ;eusart.c: 36:     return RCREG;
   621   0006C4  50AE               	movf	174,w,c	;volatile
   622   0006C6  0012               	return		;funcret
   623   0006C8                     __end_of_eusart_read:
   624                           	callstack 0
   625                           
   626                           	psect	smallconst
   627   000600                     __psmallconst:
   628                           	callstack 0
   629   000600  00                 	db	0
   630   000601  00                 	db	0	; dummy byte at the end
   631   000000                     
   632                           	psect	rparam
   633   000000                     
   634                           	psect	temp
   635   000045                     btemp:
   636                           	callstack 0
   637   000045                     	ds	1
   638   000000                     int$flags	set	btemp
   639   000000                     wtemp8	set	btemp+1
   640   000000                     ttemp5	set	btemp+1
   641   000000                     ttemp6	set	btemp+4
   642   000000                     ttemp7	set	btemp+8
   643                           
   644                           	psect	idloc
   645                           
   646                           ;Config register IDLOC0 @ 0x200000
   647                           ;	unspecified, using default values
   648   200000                     	org	2097152
   649   200000  FF                 	db	255
   650                           
   651                           ;Config register IDLOC1 @ 0x200001
   652                           ;	unspecified, using default values
   653   200001                     	org	2097153
   654   200001  FF                 	db	255
   655                           
   656                           ;Config register IDLOC2 @ 0x200002
   657                           ;	unspecified, using default values
   658   200002                     	org	2097154
   659   200002  FF                 	db	255
   660                           
   661                           ;Config register IDLOC3 @ 0x200003
   662                           ;	unspecified, using default values
   663   200003                     	org	2097155
   664   200003  FF                 	db	255
   665                           
   666                           ;Config register IDLOC4 @ 0x200004
   667                           ;	unspecified, using default values
   668   200004                     	org	2097156
   669   200004  FF                 	db	255
   670                           
   671                           ;Config register IDLOC5 @ 0x200005
   672                           ;	unspecified, using default values
   673   200005                     	org	2097157
   674   200005  FF                 	db	255
   675                           
   676                           ;Config register IDLOC6 @ 0x200006
   677                           ;	unspecified, using default values
   678   200006                     	org	2097158
   679   200006  FF                 	db	255
   680                           
   681                           ;Config register IDLOC7 @ 0x200007
   682                           ;	unspecified, using default values
   683   200007                     	org	2097159
   684   200007  FF                 	db	255
   685                           
   686                           	psect	config
   687                           
   688                           ; Padding undefined space
   689   300000                     	org	3145728
   690   300000  FF                 	db	255
   691                           
   692                           ;Config register CONFIG1H @ 0x300001
   693                           ;	Oscillator Selection bits
   694                           ;	OSC = HS, HS oscillator
   695                           ;	Fail-Safe Clock Monitor Enable bit
   696                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   697                           ;	Internal/External Oscillator Switchover bit
   698                           ;	IESO = OFF, Oscillator Switchover mode disabled
   699   300001                     	org	3145729
   700   300001  02                 	db	2
   701                           
   702                           ;Config register CONFIG2L @ 0x300002
   703                           ;	Power-up Timer Enable bit
   704                           ;	PWRT = OFF, PWRT disabled
   705                           ;	Brown-out Reset Enable bits
   706                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   707                           ;	Brown Out Reset Voltage bits
   708                           ;	BORV = 3, Minimum setting
   709   300002                     	org	3145730
   710   300002  19                 	db	25
   711                           
   712                           ;Config register CONFIG2H @ 0x300003
   713                           ;	Watchdog Timer Enable bit
   714                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   715                           ;	Watchdog Timer Postscale Select bits
   716                           ;	WDTPS = 32768, 1:32768
   717   300003                     	org	3145731
   718   300003  1E                 	db	30
   719                           
   720                           ; Padding undefined space
   721   300004                     	org	3145732
   722   300004  FF                 	db	255
   723                           
   724                           ;Config register CONFIG3H @ 0x300005
   725                           ;	CCP2 MUX bit
   726                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   727                           ;	PORTB A/D Enable bit
   728                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   729                           ;	Low-Power Timer1 Oscillator Enable bit
   730                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   731                           ;	MCLR Pin Enable bit
   732                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   733   300005                     	org	3145733
   734   300005  81                 	db	129
   735                           
   736                           ;Config register CONFIG4L @ 0x300006
   737                           ;	Stack Full/Underflow Reset Enable bit
   738                           ;	STVREN = ON, Stack full/underflow will cause Reset
   739                           ;	Single-Supply ICSP Enable bit
   740                           ;	LVP = OFF, Single-Supply ICSP disabled
   741                           ;	Extended Instruction Set Enable bit
   742                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   743                           ;	Background Debugger Enable bit
   744                           ;	DEBUG = 0x1, unprogrammed default
   745   300006                     	org	3145734
   746   300006  81                 	db	129
   747                           
   748                           ; Padding undefined space
   749   300007                     	org	3145735
   750   300007  FF                 	db	255
   751                           
   752                           ;Config register CONFIG5L @ 0x300008
   753                           ;	Code Protection bit
   754                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   755                           ;	Code Protection bit
   756                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   757                           ;	Code Protection bit
   758                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   759                           ;	Code Protection bit
   760                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   761   300008                     	org	3145736
   762   300008  0F                 	db	15
   763                           
   764                           ;Config register CONFIG5H @ 0x300009
   765                           ;	Boot Block Code Protection bit
   766                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   767                           ;	Data EEPROM Code Protection bit
   768                           ;	CPD = OFF, Data EEPROM not code-protected
   769   300009                     	org	3145737
   770   300009  C0                 	db	192
   771                           
   772                           ;Config register CONFIG6L @ 0x30000A
   773                           ;	Write Protection bit
   774                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   775                           ;	Write Protection bit
   776                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   777                           ;	Write Protection bit
   778                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   779                           ;	Write Protection bit
   780                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   781   30000A                     	org	3145738
   782   30000A  0F                 	db	15
   783                           
   784                           ;Config register CONFIG6H @ 0x30000B
   785                           ;	Configuration Register Write Protection bit
   786                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   787                           ;	Boot Block Write Protection bit
   788                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   789                           ;	Data EEPROM Write Protection bit
   790                           ;	WRTD = OFF, Data EEPROM not write-protected
   791   30000B                     	org	3145739
   792   30000B  E0                 	db	224
   793                           
   794                           ;Config register CONFIG7L @ 0x30000C
   795                           ;	Table Read Protection bit
   796                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   797                           ;	Table Read Protection bit
   798                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   799                           ;	Table Read Protection bit
   800                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   801                           ;	Table Read Protection bit
   802                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   803   30000C                     	org	3145740
   804   30000C  0F                 	db	15
   805                           
   806                           ;Config register CONFIG7H @ 0x30000D
   807                           ;	Boot Block Table Read Protection bit
   808                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   809   30000D                     	org	3145741
   810   30000D  40                 	db	64
   811                           tosu	equ	0xFFF
   812                           tosh	equ	0xFFE
   813                           tosl	equ	0xFFD
   814                           stkptr	equ	0xFFC
   815                           pclatu	equ	0xFFB
   816                           pclath	equ	0xFFA
   817                           pcl	equ	0xFF9
   818                           tblptru	equ	0xFF8
   819                           tblptrh	equ	0xFF7
   820                           tblptrl	equ	0xFF6
   821                           tablat	equ	0xFF5
   822                           prodh	equ	0xFF4
   823                           prodl	equ	0xFF3
   824                           indf0	equ	0xFEF
   825                           postinc0	equ	0xFEE
   826                           postdec0	equ	0xFED
   827                           preinc0	equ	0xFEC
   828                           plusw0	equ	0xFEB
   829                           fsr0h	equ	0xFEA
   830                           fsr0l	equ	0xFE9
   831                           wreg	equ	0xFE8
   832                           indf1	equ	0xFE7
   833                           postinc1	equ	0xFE6
   834                           postdec1	equ	0xFE5
   835                           preinc1	equ	0xFE4
   836                           plusw1	equ	0xFE3
   837                           fsr1h	equ	0xFE2
   838                           fsr1l	equ	0xFE1
   839                           bsr	equ	0xFE0
   840                           indf2	equ	0xFDF
   841                           postinc2	equ	0xFDE
   842                           postdec2	equ	0xFDD
   843                           preinc2	equ	0xFDC
   844                           plusw2	equ	0xFDB
   845                           fsr2h	equ	0xFDA
   846                           fsr2l	equ	0xFD9
   847                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      4      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eusart_string@str	PTR unsigned char  size(1) Largest target is 64
		 -> data(COMRAM[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _half_Duplex in COMRAM

    _half_Duplex->_eusart_string
    _eusart_string->_eusart_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _half_Duplex in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _half_Duplex in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _half_Duplex in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _half_Duplex in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _half_Duplex in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _half_Duplex in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _config_FOSC
                          _config_IO
                   _config_Interrupt
                        _eusart_init
 ---------------------------------------------------------------------------------
 (1) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _half_Duplex                                          2     2      0     136
                                              2 COMRAM     2     2      0
                        _eusart_read
                      _eusart_string
 ---------------------------------------------------------------------------------
 (3) _eusart_string                                        1     0      1     136
                                              1 COMRAM     1     0      1
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) _eusart_write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _eusart_read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_FOSC
   _config_IO
   _config_Interrupt
   _eusart_init

 _half_Duplex (ROOT)
   _eusart_read
   _eusart_string
     _eusart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      4      44       1       54.0%
BITBIGSFRhhhl       1E      0       0      17        0.0%
BITBIGSFRlll        1B      0       0      23        0.0%
BITBIGSFRhhlh       11      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlh          C      0       0      21        0.0%
BITBIGSFRhlh         8      0       0      20        0.0%
BITBIGSFRhhll        8      0       0      19        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      24        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 23 14:48:38 2024

                      l19 06B4                        l60 06DA                        l63 06E0  
                      l66 06D0                        l77 0670                        l78 0670  
                     l760 06A4                       l762 06B0                       l780 06DC  
                     l782 06C8                       l792 0660                       l778 06D2  
                     wreg 0FE8             eusart_write@c 0041                      _PIE1 0F9D  
                    _RCIF 7CF5                      i2l22 0690                      i2l31 065E  
                    i2l25 06A2                      i2l34 06B6                      i2l37 06C6  
                    i2l72 062A                      _TRMT 7D61                      _data 0001  
                    _main 0660                      fsr2h 0FDA                      indf2 0FDF  
                    fsr2l 0FD9                      btemp 0045                      start 000E  
            ___param_bank 0000                     ?_main 0041                     i2l800 0648  
                   i2l802 060C                     i2l804 061A                     i2l806 0620  
                   i2l808 0628                     i2l772 06B6                     i2l756 0690  
                   i2l774 06C4                     i2l758 069E                     i2l794 0636  
                   i2l796 063A                     i2l798 0646                     _RCREG 0FAE  
                   _SPBRG 0FAF                     _TXREG 0FAD              ?_eusart_init 0041  
            ?_eusart_read 0041                     ttemp5 0046                     ttemp6 0049  
                   ttemp7 004D                     status 0FD8                     wtemp8 0046  
         __initialization 0678              __end_of_main 0678                    ??_main 0045  
           __activetblptr 0000                    _ADCON1 0FC1                    _INTCON 0FF2  
                  _OSCCON 0FD3                    i2u1_40 069E                    i2u1_41 069A  
                  i2u3_40 06C4                    i2u3_41 06C0                    i2u5_40 065E  
                  i2u5_41 065A                    i2u6_40 061A                    i2u6_41 0616  
                  clear_0 067E                    isa$std 0001             ?_eusart_write 0041  
            __mediumconst 0000                __accesstop 0080   __end_of__initialization 0684  
           ___rparam_used 0001          eusart_string@str 0042            __pcstackCOMRAM 0041  
          ??_eusart_write 0041          _config_Interrupt 06C8                   _OSCTUNE 0F9B  
           _eusart_string 0636                   __Hparam 0000                   __Lparam 0000  
       __end_of_config_IO 06E2              __psmallconst 0600                   __pcinit 0678  
                 __ramtop 0600                   __ptext0 0660                   __ptext1 06A4  
                 __ptext2 06C8                   __ptext3 06DC                   __ptext4 06D2  
                 __ptext6 0636                   __ptext7 068E                   __ptext8 06B6  
          __pintcode_body 0602      end_of_initialization 0684            ?_eusart_string 0042  
                 int_func 0602      __end_of_eusart_write 06A4             ??_half_Duplex 0043  
               _RCSTAbits 0FAB                   postinc0 0FEE             ??_config_FOSC 0045  
               _TXSTAbits 0FAC  __end_of_config_Interrupt 06D2       __end_of_half_Duplex 0636  
             _BAUDCTLbits 0FB8       start_initialization 0678           ??_eusart_string 0043  
     __end_of_config_FOSC 06DC               __pbssCOMRAM 0001             ??_eusart_init 0045  
           ??_eusart_read 0041               _half_Duplex 0008                 __pintcode 0008  
               _config_IO 06DC              _eusart_write 068E               __smallconst 0600  
             _config_FOSC 06D2       __end_of_eusart_init 06B6       __end_of_eusart_read 06C8  
                _PIR1bits 0F9E                ?_config_IO 0041                  __Hrparam 0000  
       ?_config_Interrupt 0041                  __Lrparam 0000        ??_config_Interrupt 0045  
             _eusart_init 06A4               _eusart_read 06B6                  isa$xinst 0000  
                int$flags 0045               ??_config_IO 0045     __end_of_eusart_string 0660  
                intlevel2 0000              ?_half_Duplex 0041              ?_config_FOSC 0041  
